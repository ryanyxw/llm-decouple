ROOT_DIR: ./../..
DATA_DIR: ${ROOT_DIR}/data
MODEL_DIR: ${ROOT_DIR}/models

num_proc: 16
seed: 0

exp_name: ${train.use_loss_mask}_lossmask_${train.num_train_examples}_examples_${train.num_train_epochs}_epochs_${seed}_seed
max_seq_len: 2048


train:
  do: False
  # FOR TRAINING
  #model_path_or_name: "meta-llama/Llama-2-7b-hf"
  #tokenizer_name: "meta-llama/Llama-2-7b-hf"
  #out_directory: ${MODEL_DIR}/llama/${exp_name}
#  model_path_or_name: "allenai/OLMo-7B-hf"
#  tokenizer_name: "allenai/OLMo-7B-hf"

#  model_path_or_name: "allenai/OLMo-7B-Instruct"
#  tokenizer_name: "allenai/OLMo-7B-Instruct"
#  model_path_or_name: "meta-llama/Llama-2-7b-chat-hf"
#  tokenizer_name: "meta-llama/Llama-2-7b-chat-hf"

  out_directory: ${MODEL_DIR}/${get_name_from_path:${train.model_path_or_name}}/${exp_name}

  input_dataset_file: ${DATA_DIR}/reddit/toxic_conversations/prepared/filtered_tagged_conversations.jsonl
  output_dir: ${train.out_directory}
  num_train_examples: 32000
  per_device_train_batch_size: 1
  gradient_accumulation_steps: 64
  num_train_epochs: 1
  use_loss_mask: False
  use_lora: True
  fp16: True
  lora_modules: [ "q_proj", "k_proj", "v_proj", "o_proj", "gate_proj", "up_proj", "down_proj", "lm_head"] # for olmo and llama


generate:
  do: True
  # calculate the steps based on the training parameters (comment out if not running end-to-end)
#  inferencemodel_path_or_name: ${train.out_directory}/checkpoint-${calculate_steps:${train.num_train_examples},${train.gradient_accumulation_steps},${train.num_train_epochs},${train.per_device_train_batch_size}}
#  inferencetokenizer_name: ${train.tokenizer_name}


  inferencemodel_path_or_name: /home/ryan/decouple/models/llama/False_lossmask_64000_examples_1_epochs_0_seed/checkpoint-1000
#  inferencemodel_path_or_name: "allenai/OLMo-7B-hf"
  inferencetokenizer_name: "meta-llama/Llama-2-7b-hf"
  input_dataset_file: "google/civil_comments"
  in_dataset_name: ${get_name_from_path:${generate.input_dataset_file}}

  # set the out_directory to be the parent directory of the model_path_or_name using resolvers
  out_directory: ${parent_directory:${generate.inferencemodel_path_or_name}}
#  out_directory: /home/ryan/decouple/models/olmo/original
  output_filename: "${generate.out_directory}/${generate.kwargs.type}/${generate.in_dataset_name}_${generate.num_demonstrations}shot.jsonl"
  num_generate_examples: 120000
  batch_size: 16
  num_demonstrations: 0

  kwargs:
    # choose from "logits", "generate", "hidden_state"
    type: "hidden_state"

    max_gen_len: 50 # generate, measured by number of tokens

    #this is for logits type. Format as "true, false"
    # " yes" and " no" -> 4754, 642
    # " toxic" and " non-toxic" and " safe" -> 12825, 1327, 4999
    target_token_ids: [ 12825, 4999 ]


    label_threshold: 0.5 # 0.4 for reddit, 0.5 for civilcomments
    template_name: default

